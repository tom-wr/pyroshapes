package {	import Box2D.Dynamics.b2World;	import flash.display.Sprite;	import flash.display.MovieClip;	public class Counter	{		private const SWF_WIDTH:int = 640;		private const SWF_HEIGHT:int = 480;		private const PIXEL_TO_METRE:int = 30;				private static var _world:b2World;				private static var _levelSprite:Sprite;		private var _currentLevelNumber:int;		private var _dynamicList:Array;		private var _objectiveList:Array;		private var _playerShapeList:Array;		private var _fireList:Array;				private var _squareCount:int;		private var _circleCount:int;		private var _starCount:int;				private var _mouseInitX:Number;		private var _mouseInitY:Number;		private var _drawing:Boolean;		private var _drawBox:Boolean;				private var _level1Score:int;		private var _level2Score:int;		private var _level3Score:int;		private var _level4Score:int;		private var _level5Score:int;		private var _level6Score:int;		private var _level7Score:int;		private var _level8Score:int;		private var _level9Score:int;		private var _level10Score:int;				public function Counter(world:b2World, levelSprite:Sprite)		{			_world = world;			_levelSprite = levelSprite;			_currentLevelNumber = 1;			_mouseInitX = 0;			_mouseInitY = 0;			_drawing = false;			_drawBox = true;			_dynamicList = new Array();			_objectiveList = new Array();			_playerShapeList = new Array();			_fireList = new Array();			_squareCount = 5;			_circleCount = 5;			_starCount = 0;						_level1Score = 0;			_level2Score = 0;			_level3Score = 0;			_level4Score = 0;			_level5Score = 0;			_level6Score = 0;			_level7Score = 0;			_level8Score = 0;			_level9Score = 0;			_level10Score = 0;					}				public function resetLevelCounter():void {			_drawing = false;			_drawBox = true;			_dynamicList = new Array();			_objectiveList = new Array();			_playerShapeList = new Array();			_fireList = new Array();			_squareCount = 5;			_circleCount = 5;			_starCount = 0;		}				//Level				public function get world():b2World {			return _world;		}				public function get levelSprite():Sprite {			return _levelSprite;		}				public function get currentLevelNumber():int {			return _currentLevelNumber;		}				public function set currentLevelNumber(newLevelNumber:int):void {			if(newLevelNumber > 10) {				_currentLevelNumber = 1;			}			else {				_currentLevelNumber = newLevelNumber;			}		}				public function addToDynmaicList(dynamicBody:DynamicBody):void {			_dynamicList.push(dynamicBody);		}				public function get dynamicList():Array {			return _dynamicList;		}				public function addToObjectiveList(dynamicBody:DynamicBody):void {			_objectiveList.push(dynamicBody);		}				public function get objectiveList():Array {			return _objectiveList;		}				public function get fireList():Array {			return _fireList;		}				public function addToFireList(fire:MovieClip):void {			_fireList.push(fire);		}				public function get playerShapeList():Array {			return _playerShapeList;		}				public function addToPlayerShapeList(newShape:DynamicBody):void {			_playerShapeList.push(newShape);		}						//Counters				public function get squareCount():int {			return _squareCount;		}				public function set squareCount(squareCount:int):void {			_squareCount = squareCount;		}				public function get circleCount():int {			return _circleCount;		}				public function set circleCount(circleCount:int):void {			_circleCount = circleCount;		}				public function get starCount():int {			return _starCount;		}				public function set starCount(starCount:int):void {			_starCount = starCount;		}		//SWF constants				public function get swfHeight():int {			return SWF_HEIGHT;		}				public function get swfWidth():int {			return SWF_WIDTH;		}				public function get pixelToMetre():int {			return PIXEL_TO_METRE;		}				//Mouse				public function set drawing(drawingSetting:Boolean):void {			_drawing = drawingSetting;		}				public function get drawing():Boolean {			return _drawing;		}				public function set drawBox(drawSetting:Boolean):void {			_drawBox = drawSetting;		}				public function get drawBox():Boolean {			return _drawBox;		}				public function get mouseInitX():Number {			return _mouseInitX;		}				public function set mouseInitX(initX:Number):void {			_mouseInitX = initX;		}				public function get mouseInitY():Number {			return _mouseInitY;		}				public function set mouseInitY(initY:Number):void {			_mouseInitY = initY;		}				// Level scores				public function get level1Score():int {			return _level1Score;		}				public function set level1Score(score:int):void {			if(score > _level1Score) {				_level1Score = score;			}		}				public function get level2Score():int {			return _level2Score;		}				public function set level2Score(score:int):void {			if(score > _level2Score) {				_level2Score = score;			}		}				public function get level3Score():int {			return _level3Score;		}				public function set level3Score(score:int):void {			if(score > _level3Score) {				_level3Score = score;			}		}				public function get level4Score():int {			return _level4Score;		}				public function set level4Score(score:int):void {			if(score > _level4Score) {				_level4Score = score;			}		}				public function get level5Score():int {			return _level5Score;		}				public function set level5Score(score:int):void {			if(score > _level5Score) {				_level5Score = score;			}		}				public function get level6Score():int {			return _level6Score;		}				public function set level6Score(score:int):void {			if(score > _level6Score) {				_level6Score = score;			}		}				public function get level7Score():int {			return _level7Score;		}				public function set level7Score(score:int):void {			if(score > _level7Score) {				_level7Score = score;			}		}				public function get level8Score():int {			return _level8Score;		}				public function set level8Score(score:int):void {			if(score > _level8Score) {				_level8Score = score;			}		}				public function get level9Score():int {			return _level9Score;		}				public function set level9Score(score:int):void {			if(score > _level9Score) {				_level9Score = score;			}		}				public function get level10Score():int {			return _level10Score;		}				public function set level10Score(score:int):void {			if(score > _level10Score) {				_level10Score = score;			}		}	}}