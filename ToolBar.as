package {		import flash.display.MovieClip;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.events.MouseEvent;		public class ToolBar extends MovieClip	{		private var _counter:Counter;		private var _textMachine:TextMachine;				private var _squareCount:TextField;		private var _circleCount:TextField;				private var _toolBar:MovieClip;		private var _squareButton:MovieClip;		private var _circleButton:MovieClip;		private var _star1:MovieClip;		private var _star2:MovieClip;		private var _star3:MovieClip;				private var _callMenuDialog:Boolean;		private var _callRestart:Boolean;				public function ToolBar(counter:Counter)		{			_counter = counter;			_textMachine = new TextMachine();			makeToolBar();			addMenuButton();			addShapeButtons();			addStars();			setButtonStates();		}				private function makeToolBar():void {			var newToolBar:MovieClip = new ToolBarMC();			newToolBar.x = _counter.swfWidth - newToolBar.width/2;			newToolBar.y = (newToolBar.height/2)-2;						_toolBar = newToolBar;			this.addChild(_toolBar);		}				private function addStars():void {			_star1 = new Star();			_star2 = new Star();			_star3 = new Star();						_star1.y = _toolBar.y;			_star2.y = _toolBar.y;			_star3.y = _toolBar.y;						_star1.x = 40;			_star2.x = 90;			_star3.x = 140;						this.addChild(_star1);			this.addChild(_star2);			this.addChild(_star3);		}				private function addMenuButton():void {			var menuButton:MovieClip = new MenuButton();			var restartButton:MovieClip = new RestartButton();						menuButton.y = _toolBar.y -15;							menuButton.x = _counter.swfWidth - 50;			restartButton.x = _counter.swfWidth -50;			restartButton.y = _toolBar.y + 15;							this.addChild(menuButton);			this.addChild(restartButton);						menuButton.addEventListener(MouseEvent.CLICK, menuClick);			restartButton.addEventListener(MouseEvent.CLICK, restartClick);					}				private function addShapeButtons():void {			addSquareButton();			addCircleButton();		}				private function addSquareButton():void {			var squareButton:MovieClip = new SquareButton();			squareButton.height = 45;			squareButton.width = 45;			squareButton.x = _counter.swfWidth - 190;			squareButton.y = _toolBar.y;						_squareButton = squareButton;						addButtonListeners(_squareButton);						this.addChild(squareButton);						_squareCount = new TextField();			_squareCount.defaultTextFormat = _textMachine.toolBarFormat;			_squareCount.selectable = false;			_squareCount.text = "x"+_counter.squareCount;			_squareCount.autoSize = TextFieldAutoSize.CENTER;			_squareCount.x = _squareButton.x-_squareCount.width/2;			_squareCount.y = _squareButton.y+20;					this.addChild(_squareCount);		}				private function addCircleButton():void {			var circleButton:MovieClip = new CircleButton();			circleButton.height = 50;			circleButton.width = 50;			circleButton.x = _counter.swfWidth - 130;			circleButton.y = _toolBar.y;						_circleButton = circleButton;						addButtonListeners(_circleButton);						this.addChild(circleButton);						_circleCount = new TextField();			_circleCount.defaultTextFormat = _textMachine.toolBarFormat;			_circleCount.selectable = false;			_circleCount.text = "x"+_counter.circleCount;			_squareCount.autoSize = TextFieldAutoSize.CENTER;			_circleCount.x = _circleButton.x-_circleCount.width/2;			_circleCount.y = _circleButton.y+20;			this.addChild(_circleCount);		}				public function updateText():void {			_squareCount.text = "x"+_counter.squareCount;			_squareCount.autoSize = TextFieldAutoSize.CENTER;			_circleCount.text = "x"+_counter.circleCount;			_circleCount.autoSize = TextFieldAutoSize.CENTER;		}				public function updateStars():void {			switch(_counter.starCount) {				case 1:				_star1.gotoAndStop("full");				break;				case 2:				_star2.gotoAndStop("full");				break;				case 3:				_star3.gotoAndStop("full");				break;				default:			}		}				public function updateDisabledButtons():void {			if(_counter.circleCount < 1) {				removeButtonListeners(_circleButton);				_circleButton.gotoAndStop("disabled");							}			if(_counter.squareCount < 1) {				removeButtonListeners(_squareButton);				_squareButton.gotoAndStop("disabled");							}		}				private function setButtonStates():void {			if(_counter.drawBox) {				_squareButton.gotoAndPlay("engaged");				_circleButton.gotoAndPlay("intro");			}			else {				_circleButton.gotoAndPlay("engaged");				_squareButton.gotoAndPlay("intro");			}		}				private function menuClick(e:MouseEvent):void {			if(!_callMenuDialog) {				_callMenuDialog = true;			}		}				private function restartClick(e:MouseEvent):void {			if(!_callRestart) {				_callRestart = true;			}		}				private function menuBack(e:MouseEvent):void {			//closeMenuDialog();		}				private function mainMenu(e:MouseEvent):void {			//exitToMain();		}				private function addButtonListeners(button:MovieClip):void {			button.addEventListener(MouseEvent.MOUSE_OVER, overButton);			button.addEventListener(MouseEvent.MOUSE_OUT, outButton);			button.addEventListener(MouseEvent.CLICK, clickButton);		}				private function removeButtonListeners(button:MovieClip):void {			button.removeEventListener(MouseEvent.MOUSE_OVER, overButton);			button.removeEventListener(MouseEvent.MOUSE_OUT, outButton);			button.removeEventListener(MouseEvent.CLICK, clickButton);		}				private function overButton(e:MouseEvent):void {			if(e.target.valueOf() == _squareButton.valueOf() && !_counter.drawBox) {				_squareButton.gotoAndStop("over");			}			else if(e.target.valueOf() == _circleButton.valueOf() && _counter.drawBox) {				_circleButton.gotoAndStop("over");			}			//gotoAndStop("over");		}				private function outButton(e:MouseEvent):void {			if(e.target.valueOf() == _squareButton.valueOf() && !_counter.drawBox) {				_squareButton.gotoAndStop("out");			}			else if(e.target.valueOf() == _circleButton.valueOf() && _counter.drawBox) {				_circleButton.gotoAndStop("out");			}		}				private function clickButton(e:MouseEvent):void {			if(e.target.valueOf() == _squareButton.valueOf()) {				_squareButton.gotoAndPlay("engaged");				_circleButton.gotoAndStop("out");				_counter.drawBox = true;			}			else if(e.target.valueOf() == _circleButton.valueOf()) {				_circleButton.gotoAndPlay("engaged");				_squareButton.gotoAndStop("out");				_counter.drawBox = false;			}		}				public function get callMenuDialog():Boolean {			return _callMenuDialog;		}				public function set callMenuDialog(callDialog:Boolean):void{			_callMenuDialog = callDialog;		}				public function get callRestart():Boolean {			return _callRestart;		}	}}